[metadata]
name = aodh
summary = OpenStack Telemetry Alarming
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://www.openstack.org/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Topic :: System :: Monitoring

[global]
setup-hooks =
    pbr.hooks.setup_hook

[files]
packages =
    aodh
data_files =
    etc/aodh = etc/aodh/*

[extras]
mysql =
    SQLAlchemy<1.1.0,>=0.9.7
    alembic>=0.7.2
    PyMySQL>=0.6.2 # MIT License

postgresql =
    SQLAlchemy<1.1.0,>=0.9.7
    alembic>=0.7.2
    psycopg2

mongodb =
    pymongo>=3.0.2

hbase =
    happybase!=0.7,>=0.5:python_version=='2.7'
    # Required for bson
    pymongo>=3.0.2

doc =
    oslosphinx>=2.5.0 # Apache-2.0
    reno>=0.1.1  # Apache2
    sphinx!=1.2.0,!=1.3b1,<1.3,>=1.1.2
    sphinxcontrib-httpdomain
    sphinxcontrib-pecanwsme>=0.8

test =
    overtest>=0.7.0
    oslotest>=1.5.1 # Apache-2.0
    coverage>=3.6
    fixtures>=1.3.1
    mock>=1.0
    testrepository>=0.0.18
    testtools>=1.4.0
    gabbi>=0.12.0 # Apache-2.0
    # Provides subunit-trace
    tempest-lib>=0.6.1
    python-subunit>=0.0.18

[entry_points]
aodh.storage =
    log = aodh.storage.impl_log:Connection
    mongodb = aodh.storage.impl_mongodb:Connection
    mysql = aodh.storage.impl_sqlalchemy:Connection
    mysql+pymysql = aodh.storage.impl_sqlalchemy:Connection
    postgresql = aodh.storage.impl_sqlalchemy:Connection
    sqlite = aodh.storage.impl_sqlalchemy:Connection
    hbase = aodh.storage.impl_hbase:Connection

aodh.alarm.rule =
    threshold = aodh.api.controllers.v2.alarm_rules.threshold:AlarmThresholdRule
    combination = aodh.api.controllers.v2.alarm_rules.combination:AlarmCombinationRule
    gnocchi_resources_threshold = aodh.api.controllers.v2.alarm_rules.gnocchi:MetricOfResourceRule
    gnocchi_aggregation_by_metrics_threshold = aodh.api.controllers.v2.alarm_rules.gnocchi:AggregationMetricsByIdLookupRule
    gnocchi_aggregation_by_resources_threshold = aodh.api.controllers.v2.alarm_rules.gnocchi:AggregationMetricByResourcesLookupRule
    event = aodh.api.controllers.v2.alarm_rules.event:AlarmEventRule
    composite = aodh.api.controllers.v2.alarm_rules.composite:composite_rule

aodh.evaluator =
    threshold = aodh.evaluator.threshold:ThresholdEvaluator
    combination = aodh.evaluator.combination:CombinationEvaluator
    gnocchi_resources_threshold = aodh.evaluator.gnocchi:GnocchiResourceThresholdEvaluator
    gnocchi_aggregation_by_metrics_threshold = aodh.evaluator.gnocchi:GnocchiAggregationMetricsThresholdEvaluator
    gnocchi_aggregation_by_resources_threshold = aodh.evaluator.gnocchi:GnocchiAggregationResourcesThresholdEvaluator
    composite = aodh.evaluator.composite:CompositeEvaluator

aodh.notifier =
    log = aodh.notifier.log:LogAlarmNotifier
    test = aodh.notifier.test:TestAlarmNotifier
    http = aodh.notifier.rest:RestAlarmNotifier
    https = aodh.notifier.rest:RestAlarmNotifier
    trust+http = aodh.notifier.trust:TrustRestAlarmNotifier
    trust+https = aodh.notifier.trust:TrustRestAlarmNotifier
    zaqar = aodh.notifier.zaqar:ZaqarAlarmNotifier

console_scripts =
    aodh-api = aodh.cmd.api:main
    aodh-dbsync = aodh.cmd.storage:dbsync
    aodh-expirer = aodh.cmd.storage:expirer
    aodh-evaluator = aodh.cmd.alarm:evaluator
    aodh-notifier = aodh.cmd.alarm:notifier
    aodh-listener = aodh.cmd.alarm:listener

oslo.config.opts =
    aodh = aodh.opts:list_opts
    aodh-auth = aodh.opts:list_keystoneauth_opts

keystoneauth1.plugin =
    password-aodh-legacy = aodh.keystone_client:LegacyAodhKeystoneLoader

tempest.test_plugins =
    aodh_tests = aodh.tests.tempest.plugin:AodhTempestPlugin

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[pbr]
warnerrors = true
autodoc_index_modules = true
autodoc_exclude_modules = aodh.storage.sqlalchemy.alembic.*

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = aodh/locale/aodh.pot

[compile_catalog]
directory = aodh/locale
domain = aodh

[update_catalog]
domain = aodh
output_dir = aodh/locale
input_file = aodh/locale/aodh.pot
